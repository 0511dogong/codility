An array A consisting of N different integers is given. The array contains integers in the range [1..(N + 1)], which means that exactly one element is missing.

Your goal is to find that missing element.

Write a function:

def solution(A)

that, given an array A, returns the value of the missing element.

For example, given array A such that:

  A[0] = 2
  A[1] = 3
  A[2] = 1
  A[3] = 5
the function should return 4, as it is the missing element.

Write an efficient algorithm for the following assumptions:

N is an integer within the range [0..100,000];
the elements of A are all distinct;
each element of array A is an integer within the range [1..(N + 1)].

---------------------------------------------------------------------
try 1.

# Total score: 50%
def solution(A):
	return list(set(i+1 for i in range(len(A))) - set(A))[0]
  
---------------------------------------------------------------------
try 2.

# Total score: 10%
def solution(A):
    return A[len(A)-1] - (sum(A) - sum(range(1,len(A) + 1)))
---------------------------------------------------------------------
try 3.

# Total score: 50%
def solution(A):
	return list(set(range(1,len(A) + 1)) - set(A))[0]
---------------------------------------------------------------------
try 4.

# Total score: 100%
def solution(A):
	if not A:
		return 1

	sufficient_set = set(range(1,len(A) + 2))
	missing_set = set(A)


	set_diff_result = sufficient_set - missing_set

	return list(set_diff_result)[0]
---------------------------------------------------------------------
try 5.

# Total score: 100%
def solution(A):
	if not A:
		return 1

	return list(set(range(1,len(A) + 2)) - set(A))[0]
---------------------------------------------------------------------
